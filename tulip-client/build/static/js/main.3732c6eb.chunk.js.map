{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/HomeComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","required","val","length","maxLength","len","RenderDish","console","log","in","transformProps","exitTransform","top","description","RenderComments","comments","postComment","dishId","c","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleSubmit","this","setState","values","JSON","stringify","rating","outline","isOpen","toggle","onSubmit","htmlFor","md","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","DishDetail","Header","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","weight","navbar","innerRef","input","check","Footer","isNumber","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","size","offset","checkbox","RenderCard","item","designation","Home","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","left","object","body","heading","RenderLeaderList","leaders","About","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3732c6eb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . . </p>\r\n        </div>\r\n    );\r\n}","export const baseUrl= 'http://localhost:3001/';","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n  return (\r\n    <Card>\r\n      <Link to={`/menu/${dish.id}`}>\r\n        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n        <CardImgOverlay>\r\n          <CardTitle>{dish.name}</CardTitle>\r\n        </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\nconst Menu = props => {\r\n  const menu = props.dishes.dishes.map(dish => {\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n        <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n      </div>\r\n    );\r\n  });\r\n  if (props.dishes.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.dishes.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h4>{props.dishes.errMess}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Menu</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">{menu}</div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n\r\n\r\n// import React,{Component} from 'react';\r\n// import {Media} from 'reactstrap';\r\n// import { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n//     CardTitle } from 'reactstrap';\r\n// import Dishdetail from './DishdetailComponent';\r\n// import { Loading } from './LoadingComponent';\r\n\r\n\r\n// class Menu extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {\r\n//             selectedDish: null\r\n//         };\r\n//     }\r\n\r\n//     onDishSelect(dish) {\r\n//         this.setState({ selectedDish: dish});\r\n//     }\r\n\r\n//     renderDish(dish) {\r\n//         if (dish != null)\r\n//             return(\r\n//                 <Card>\r\n//                     <CardImg top src={dish.image} alt={dish.name} />\r\n//                     <CardBody>\r\n//                       <CardTitle>{dish.name}</CardTitle>\r\n//                       <CardText>{dish.description}</CardText>\r\n//                     </CardBody>\r\n//                 </Card>\r\n//             );\r\n//         else\r\n//             return(\r\n//                 <div></div>\r\n//             );\r\n//     }\r\n\r\n//     render() {\r\n//         const menu = this.props.dishes.map((dish) => {\r\n//             return (\r\n//               <div  className=\"col-12 col-md-5 m-1\">\r\n//                 {/* <Card key={dish.id}\r\n//                   onClick={() => this.onDishSelect(dish)}>\r\n//                   <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n//                   <CardImgOverlay>\r\n//                       <CardTitle>{dish.name}</CardTitle>\r\n//                   </CardImgOverlay>\r\n//                 </Card> */}\r\n//                 <Dishdetail selectedDish=/>\r\n//               </div>\r\n//             );\r\n//         });\r\n\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <div className=\"row\">\r\n//                     {menu}\r\n//                 </div>\r\n//                 <div className=\"row\">\r\n//                   <div  className=\"col-12 col-md-5 m-1\">\r\n//                     {this.renderDish(this.state.selectedDish)}\r\n//                   </div>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Menu;","import React,{Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n  CardTitle, Breadcrumb, BreadcrumbItem, Modal,ModalBody,ModalHeader, Button,\r\n  // Form,Input, FormGroup,\r\n  Col,Row, Label } from 'reactstrap';\r\nimport {Control,LocalForm,Errors} from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport {Link} from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {FadeTransform,Fade, Stagger} from 'react-animation-components';\r\n\r\n// class Dishdetail extends Component{\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n// const isNumber = (val) => !isNaN(Number(val));\r\n// const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n\r\n\r\n  function RenderDish({dish}) {\r\n    console.log(dish);\r\n    // dish=dish[0];\r\n    if (dish !== null)\r\n        return(\r\n          <div>\r\n          <FadeTransform\r\n          in\r\n          transformProps={{\r\n              exitTransform: 'scale(0.5) translateY(-50%)'\r\n          }}>\r\n            <Card>\r\n                {/* <CardImg top src={dish.image} alt={dish.name} /> */}\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                  <CardTitle>{dish.name}</CardTitle>\r\n                  <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n            </div>\r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n}\r\n\r\nfunction RenderComments({comments,postComment,dishId}) {\r\n  if (comments.length !== 0){\r\n      return(\r\n      <>\r\n      <div>\r\n        <h4>Comments</h4>\r\n        <ul className=\"list-unstyled\">\r\n          <Stagger in>\r\n\r\n            {comments.map((c) => {\r\n            return (\r\n              <Fade in>\r\n                <li key={c.id}>\r\n                  <p>{c.comment}</p>\r\n                  <p>--{c.author} {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(c.date)))}</p>\r\n                </li>\r\n              </Fade>\r\n            );\r\n            })}\r\n        </Stagger>\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <CommentForm dishId={dishId} postComment={postComment} />\r\n      </div>\r\n      </>\r\n      );\r\n  }\r\n  else\r\n      return(\r\n          <div></div>\r\n      );\r\n}\r\n\r\nclass CommentForm extends Component{\r\n\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        isNavOpen: false,\r\n        isModalOpen:false\r\n    };\r\n    this.toggleNav=this.toggleNav.bind(this);\r\n    this.toggleModal=this.toggleModal.bind(this);\r\n    this.handleSubmit=this.handleSubmit.bind(this);\r\n}\r\n\r\ntoggleNav(){\r\n  this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n  });\r\n}\r\n\r\n\r\ntoggleModal(){\r\n  this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n  });\r\n}\r\n\r\nhandleSubmit(values) {\r\n  console.log('Current State is: ' + JSON.stringify(values));\r\n  // alert('Current State is: ' + JSON.stringify(values));\r\n  this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n  // event.preventDefault();\r\n}\r\n\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n      <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n      </Button>\r\n      <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Submit Comment\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={6}>Rating</Label>\r\n                                <Col md={10}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\" md={6}>Your Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                            placeholder=\"Your Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }}\r\n                                            />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".author\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\" md={6}>Comment</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                            rows=\"12\"\r\n                                            className=\"form-control\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={6}>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </LocalForm>\r\n\r\n                        \r\n                    </ModalBody>\r\n                </Modal>\r\n    </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n    // render() {\r\n      const  DishDetail = (props) => {\r\n        // console.log(props.comments);\r\n        if(props.isLoading) {\r\n          return (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <Loading /> \r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n        else if(props.errMess){\r\n          return (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <h4>{props.errMess}</h4>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n       else if(props.dish != null)\r\n          return (\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr/>\r\n                    </div>\r\n                 </div>\r\n                  <div className=\"row\">\r\n                    <div  className=\"col-12 col-md-5 m-1\">\r\n                      <RenderDish dish={props.dish}/>\r\n                    </div>\r\n                    <div  className=\"col-12 col-md-5 m-1\">\r\n                    <RenderComments comments={props.comments}\r\n                    postComment={props.postComment}\r\n                    dishId={props.dish.id}\r\n                    />\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    {/* <RenderComments /> */}\r\n                  </div>\r\n                  \r\n                </div>\r\n        );\r\n        else\r\n            return (\r\n              <div></div>\r\n            );\r\n      }\r\n    // }\r\n\r\n\r\n// }\r\n\r\nexport default DishDetail;","import React,{Component} from 'react';\r\nimport { Navbar, NavbarBrand, Jumbotron, Nav, NavbarToggler, Collapse, NavItem,Modal,ModalBody,ModalHeader, Button,Form,Input, FormGroup, Label } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isNavOpen: false,\r\n            isModalOpen:false\r\n        };\r\n        this.toggleNav=this.toggleNav.bind(this);\r\n        this.toggleModal=this.toggleModal.bind(this);\r\n        this.handleLogin=this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"username: \"+ this.username.value + \"Password:\" + this.password.value+ \"Remember:\" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src=\"assets/images/logo.png\" height=\"30\" weight=\"41\" alt=\"Ristorante Con Fusion\"/>\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/home\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span> Contact Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}>\r\n                                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                </Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante con Fusion</h1>\r\n                             <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Login\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={(input) => this.username= input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innerRef={(input) => this.password= input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember= input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" className=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Footer;","import React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Breadcrumb,BreadcrumbItem, Button, Label,Row,Col} from 'reactstrap';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        // this.state={\r\n        //     firstname:'',\r\n        //     lastname:'',\r\n        //     telnum:'',\r\n        //     email:'',\r\n        //     agree:false,\r\n        //     contactType:'Tel.',\r\n        //     message:'',\r\n        //     touched:{\r\n        //         firstname:false,\r\n        //         lastname:false,\r\n        //         telnum:false,\r\n        //         email:false,\r\n        //     }\r\n        // }\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n        // this.handleInputChange=this.handleInputChange.bind(this);\r\n        // this.handleBlur= this.handleBlur.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        //alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message);\r\n        // event.preventDefault();\r\n    }\r\n\r\n    // handleInputChange(event){\r\n    //     const target=event.target;\r\n    //     const value= target.type ==='checkbox' ? target.checked: target.value;\r\n    //     const name=target.name;\r\n\r\n    //     this.setState({\r\n    //         [name]:value\r\n    //     });\r\n    // }\r\n\r\n    // handleSubmit(event){\r\n    //     console.log(\"Current State is:\"+ JSON.stringify(this.state));\r\n    //     alert(\"Current State is:\"+ JSON.stringify(this.state));\r\n    //     event.preventDefault();\r\n    // }\r\n\r\n    // handleBlur= (field) => (evt) => {\r\n    //     this.setState({\r\n    //       touched: {...this.state.touched, [field]:true }  \r\n    //     });\r\n    // } \r\n\r\n    // validate(firstname, lastname, telnum, email) {\r\n    //     const errors = {\r\n    //         firstname: '',\r\n    //         lastname: '',\r\n    //         telnum: '',\r\n    //         email: ''\r\n    //     };\r\n\r\n    //     if (this.state.touched.firstname && firstname.length < 3)\r\n    //         errors.firstname = 'First Name should be >= 3 characters';\r\n    //     else if (this.state.touched.firstname && firstname.length > 10)\r\n    //         errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n    //     if (this.state.touched.lastname && lastname.length < 3)\r\n    //         errors.lastname = 'Last Name should be >= 3 characters';\r\n    //     else if (this.state.touched.lastname && lastname.length > 10)\r\n    //         errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n    //     const reg = /^\\d+$/;\r\n    //     if (this.state.touched.telnum && !reg.test(telnum))\r\n    //         errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n    //     if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n    //         errors.email = 'Email should contain a @';\r\n\r\n    //     return errors;\r\n    // }\r\n\r\n    render(){\r\n        // const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Contact Us</h3>\r\n                            <hr/>\r\n                        </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"www.skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                         <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        {/* <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\" \r\n                                        placeholder= \"First Name\" value={this.state.firstname}\r\n                                        valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onBlur= {this.handleBlur('firstname')}                                        \r\n                                        onChange={this.handleInputChange}/>\r\n                                        <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\" \r\n                                        placeholder= \"Last Name\" value={this.state.lastname}\r\n                                        valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onBlur= {this.handleBlur('lastname')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                        <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\" \r\n                                        placeholder= \"Tel. Number\" value={this.state.telnum}\r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onBlur= {this.handleBlur('telnum')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                        <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\" \r\n                                        placeholder= \"Email\" value={this.state.email}\r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur= {this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                        <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size:6,offset:2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" name=\"agree\"\r\n                                                checked={this.state.agree} \r\n                                                onChange={this.handleInputChange}/> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size:3,offset:1}}>\r\n                                    <Input type=\"select\" name=\"contactType\" value={this.state.contactType}\r\n                                    onChange={this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\" rows=\"12\"\r\n                                         value={this.state.message}\r\n                                         onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>        \r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                         */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {FadeTransform} from 'react-animation-components';\r\n\r\nfunction RenderCard({item,isLoading,errMess}) {\r\n    if(isLoading){\r\n        return (\r\n            <Loading/>\r\n        );\r\n    }\r\n    else if(errMess){\r\n        return(\r\n        <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> \r\n                : null}\r\n                <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\n\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                    isLoading={props.dishesLoading} \r\n                    errMess = {props.dishErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                    isLoading={props.promoLoading} \r\n                    errMess={props.promoErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                    isLoading={props.leaderLoading} \r\n                    errMess={props.leaderErrMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\nimport {Stagger, Fade} from 'react-animation-components';\n\n\nfunction RenderLeader({leader}){\n    return (\n        <div>\n        <Media>\n          <div className=\"m-5\"> \n            <Media left>\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\n            </Media>\n          </div>\n          <div className=\"m-5\">\n          <Media body>\n            <Media heading>\n            {leader.name}\n            </Media>\n            <p>{leader.designation}</p>\n            <p>{leader.description}</p>\n          </Media>\n          </div>\n        </Media>\n        </div>\n      );\n}\n\n\nfunction RenderLeaderList({leaders,isLoading,errMess}){\nif(isLoading) {\n    \n    return ( \n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading /> \n        </div>\n      </div>\n    );\n   \n  }\n  else if(errMess){\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h4>{errMess}</h4>\n        </div>\n      </div>\n    );\n  }\n  else{\n    console.log(leaders);\n    return (\n    <Stagger in>\n        {leaders.map(leader => (\n        \n        <Fade in key={leader.id}>\n                <RenderLeader key={leader.id} leader={leader}/>\n        </Fade>\n        \n        ))}\n    </Stagger>\n  );\n}\n}\n\n\n\nfunction About(props) {\n    \n\n    \n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        {/* {leaders} */}\n                        <RenderLeaderList leaders={props.leaders}\n                            isLoading={props.leaderLoading}\n                            errMess={props.leaderErrMess}\n                        />\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\n// import { DISHES } from '../shared/dishes';\r\n// import { Dishes } from './dishes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n    // setTimeout(() => {\r\n    //     dispatch(addDishes(DISHES));\r\n    // },2000);\r\n}\r\n\r\n\r\nexport const dishesLoading = () => ({\r\n    type:ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type:ActionTypes.DISHES_FAILED,\r\n    payload:errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload:dishes\r\n})\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n\r\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname:firstname,\r\n        lastname:lastname,\r\n        telnum:telnum,\r\n        email:email,\r\n        agree:agree,\r\n        contactType:contactType,\r\n        message:message\r\n    };\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => alert(\"Thank you for your feedback!\" + JSON.stringify(response)))\r\n    .catch(error =>  { console.log('post feedback', error.message); \r\n                       alert('Your feedback could not be posted\\nError: '+error.message); \r\n                     });\r\n};\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES= 'ADD_DISHES';\r\nexport const ADD_COMMENTS= 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED= 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING= 'PROMOS_LOADING';\r\nexport const ADD_PROMOS= 'ADD_PROMOS';\r\nexport const PROMOS_FAILED= 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING= 'LEADERS_LOADING';\r\nexport const ADD_LEADERS='ADD_LEADERS';\r\nexport const LEADERS_FAILED='LEADERS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions:state.promotions,\r\n    leaders:state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (firstname,lastname,telnum,email,agree,contactType,message) => dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message))\r\n});\r\n// const mapDispatchToProps = dispatch => ({\r\n  \r\n//   addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n//   fetchDishes: () => {dispatch(fetchDishes())},\r\n//   resetFeedbackForm: () => {dispatch(actions.reset('feedback'))}\r\n// });\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n    \r\n  // }\r\n\r\n\r\n//   onDishSelect(dishId) {\r\n//     this.setState({ selectedDish: dishId});\r\n//   }\r\n\r\n\r\n  componentDidMount(){\r\n    // this.props.fetchDishes();\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage= () =>{\r\n        return (\r\n          <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n         />\r\n        );\r\n    }\r\n\r\n\r\n    const DishWithId = ({match}) => {\r\n        return (\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        {/* <div className=\"container\"> */}\r\n        \r\n        <Header/>\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n        <Switch>\r\n            <Route path=\"/home\" component={HomePage}/>\r\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes}/>}/>\r\n            <Route path=\"/menu/:dishId\" component={DishWithId}/>\r\n            <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>}/>\r\n            <Route exact path=\"/aboutus\" component={() => \r\n                      <About leaders={this.props.leaders.leaders}\r\n                      leaderLoading={this.props.leaders.isLoading}\r\n                      leaderErrMess={this.props.leaders.errMess}/>}/>\r\n            <Redirect to=\"/home\" />\r\n        </Switch>\r\n        {/* <Menu dishes={this.props.dishes} onClick={(dishId) => this.onDishSelect(dishId)} /> */}\r\n        {/* <DishDetail dish={this.props.dishes.filter((dish) => dish.id === this.props.selectedDish)[0]} /> */}\r\n        {/* </div> */}\r\n        </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Dishes = (state = {\r\n    isLoading:true,\r\n    errMess:null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state,isLoading:false, errMess:false,dishes:action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state,isLoading:true, errMess:null,dishes:[]}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state,isLoading:false, errMess:action.payload,dishes:[]}\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","// import { COMMENTS } from '../shared/comments';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            // comment.id = state.comments.length;\r\n            // comment.date = new Date().toISOString();\r\n            return { ...state, comments: state.comments.concat(comment)};\r\n        \r\n        default:\r\n          return state;\r\n      }\r\n};","// import { PROMOTIONS } from '../shared/promotions';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        \r\n        default:\r\n          return state;\r\n      }\r\n};","// import { LEADERS } from '../shared/leaders';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        \r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname:'',\r\n    lastname:'',\r\n    telnum:'',\r\n    email:'',\r\n    agree:false,\r\n    contactType:'Tel.',\r\n    message:''\r\n}","import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import {Navbar, NavbarBrand} from 'reactstrap';\n// import Menu from './components/MenuComponent';\nimport './App.css';\n// import { DISHES } from './shared/dishes';\nimport Main from './components/MainComponent';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store= ConfigureStore();\n\nclass App extends Component {\n\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     dishes: DISHES\n  //   };\n  // }\n\n  render(){\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n      </Provider>\n    );\n}\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {createForms} from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'bootstrap-social/bootstrap-social.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}